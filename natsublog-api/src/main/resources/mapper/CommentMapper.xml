<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.natsu.blog.mapper.CommentMapper">

    <select id="getRootComments" resultType="com.natsu.blog.model.entity.Comment" >
        select
            id, nickname, email, content, avatar, create_time, ip, is_published, website, qq,
            is_admin_comment, page, reply_nickname, article_id, origin_id, parent_comment_id
        from
            comment
        <where>
            <if test="queryCond.page != null">
                and page = ${queryCond.page}
            </if>
            <if test="queryCond.articleId != null">
                and article_id = ${queryCond.articleId}
            </if>
            and parent_comment_id = -1
            and is_published = true
        </where>
        order by create_time desc
    </select>

    <select id="getCommentTable" resultType="com.natsu.blog.model.dto.CommentDTO">
        select
            c.id, avatar, nickname, c.content,
            (case page when 1 then a.title when 2 then '友链' when 3 then '关于我' end) as 'page_name',
            c.is_published, ip,
            ifnull(email, '--') as email,
            ifnull(website, '--') as website,
            ifnull(qq, '--') as qq,
            c.create_time
        from
            comment as c left join article as a on c.article_id = a.id
        <where>
            <if test="queryCond.keyword != null and queryCond.keyword != ''">
                and c.nickname like concat('%',#{queryCond.keyword},'%')
                or c.content like concat('%',#{queryCond.keyword},'%')
            </if>
            <if test="queryCond.startTime != null and queryCond.endTime != null">
                and c.create_time between #{queryCond.startTime} and #{queryCond.endTime}
            </if>
            <if test="queryCond.page != null">
                and c.page = #{queryCond.page}
            </if>
            <if test="queryCond.articleId != null">
                and a.id = #{queryCond.articleId}
            </if>
        </where>
        order by c.create_time desc
    </select>

    <select id="getArticleSelector" resultType="com.natsu.blog.model.entity.Article">
        select
            id, title
        from
            article
        where
            id in (select article_id from comment where article_id is not null group by article_id)
    </select>

</mapper>
