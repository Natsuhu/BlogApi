<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.natsu.blog.mapper.DashboardMapper">

    <select id="getTodayVisitCount" resultType="java.lang.Integer">
        select count(*) from visit_log where date(create_time) = curdate()
    </select>

    <select id="getArticleCount" resultType="java.lang.Integer">
        select count(*) as articleCount from article
    </select>

    <select id="getCommentCount" resultType="java.lang.Integer">
        select count(*) as commentCount from comment
    </select>

    <select id="getCategoryEcharts" resultType="com.natsu.blog.model.vo.DashboardVO">
        select
            name, count(b.id) as value
        from
            category as a left join article as b on a.id = b.category_id
        group by a.id
    </select>

    <select id="getTagEcharts" resultType="com.natsu.blog.model.vo.DashboardVO">
        select
            name, count(b.article_id) as value
        from
            tag as a left join article_tag as b on a.id = b.tag_id
        group by a.id
    </select>

    <select id="getMapEcharts" resultType="com.natsu.blog.model.vo.DashboardVO">
        select
            city as name, count(*) as value
        from
            visitor
        group by city
        having city is not null
    </select>

    <select id="getLineEcharts" resultType="com.natsu.blog.model.vo.DashboardVO">
        with recursive ta as (
            select date(#{queryCond.startTime}) as date
            union all
            select date_add(date, interval 1 day)
            from ta
            where date(#{queryCond.endTime}) > date
        ),
        tb as (
            select date, count(*) as uv, sum(count) as pv
            from (
                select count(*) as count, date(create_time) as date
                from visit_log
                where create_time between #{queryCond.startTime} and #{queryCond.endTime}
                group by date(create_time) , visitor_id) as a
            group by date
        )
        select ta.date, coalesce(uv, 0) as uv, coalesce(pv, 0) as pv from ta left join tb on ta.date = tb.date
    </select>

</mapper>
